name: Build and Release Alfred Workflow

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v0.1.0)'
        required: true
        default: 'v0.1.0'

permissions:
  contents: write
  actions: read
  security-events: write

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Validate version in info.plist
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        VERSION_NUMBER="${VERSION#v}"
        
        # 验证info.plist中的版本号
        echo "Expected version: $VERSION_NUMBER"
        echo "Current version in info.plist:"
        grep -A1 '<key>version</key>' src/info.plist | tail -1 | sed 's/.*<string>\(.*\)<\/string>.*/\1/' | tr -d '\t'
        
        # 检查版本是否匹配
        CURRENT_VERSION=$(grep -A1 '<key>version</key>' src/info.plist | tail -1 | sed 's/.*<string>\(.*\)<\/string>.*/\1/' | tr -d '\t')
        if [ "$CURRENT_VERSION" != "$VERSION_NUMBER" ]; then
          echo "❌ Version mismatch! Expected: $VERSION_NUMBER, Found: $CURRENT_VERSION"
          exit 1
        else
          echo "✅ Version matches: $VERSION_NUMBER"
        fi
        
    - name: Create Alfred Workflow package
      run: |
        # 创建临时目录
        mkdir -p build
        
        # 复制所有源文件到临时目录
        cp -r src/* build/
        
        # 创建.alfredworkflow文件（实际上是zip文件）
        cd build
        zip -r "../alfred-translator-${{ steps.version.outputs.VERSION }}.alfredworkflow" .
        cd ..
        
        # 验证文件创建
        ls -la alfred-translator-*.alfredworkflow
        
    - name: Create Release and Upload Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        RELEASE_FILE="alfred-translator-${VERSION}.alfredworkflow"
        
        # 创建release notes文件
        cat > release_notes.md << EOF
        ## 🚀 Alfred 中英翻译工具 ${VERSION}
        
        ### ✨ 主要功能
        - 🔄 中文到英文实时翻译
        - 🔊 翻译结果语音朗读
        - 💾 翻译结果智能缓存
        - ⚙️ 可配置的API设置
        - 📋 自动复制到剪贴板
        
        ### 📦 安装方法
        1. 下载下方的 \`.alfredworkflow\` 文件
        2. 双击文件自动安装到Alfred
        3. 使用 \`tset\` 命令配置API密钥
        
        ### 🎯 使用方法
        - \`t [中文文本]\` - 翻译中文到英文
        - \`⌘ + 回车\` - 朗读翻译结果
        - \`tset\` - 打开设置界面
        
        ### 📚 完整文档
        请查看 [README.md](https://github.com/${{ github.repository }}/blob/main/README.md)
        
        ---
        
        **下载文件:** \`${RELEASE_FILE}\`
        EOF
        
        # 使用gh CLI创建release
        echo "Creating release ${VERSION}..."
        gh release create "${VERSION}" \
          --title "Alfred 中英翻译工具 ${VERSION}" \
          --notes-file release_notes.md \
          "${RELEASE_FILE}#Alfred翻译工具安装包"
        
        echo "✅ Release ${VERSION} created successfully!"
